// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"

	"github.com/gofrs/uuid"
)

type DropStatus string

const (
	DropStatusUnread DropStatus = "unread"
	DropStatusRead   DropStatus = "read"
	DropStatusSaved  DropStatus = "saved"
)

func (e *DropStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DropStatus(s)
	case string:
		*e = DropStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for DropStatus: %T", src)
	}
	return nil
}

type ApiKey struct {
	ID           uuid.UUID
	UserID       uuid.UUID
	Name         string
	HashedSecret []byte
	CreatedAt    time.Time
	UpdatedAt    time.Time
}

type Drop struct {
	ID        uuid.UUID
	UserID    uuid.UUID
	Title     sql.NullString
	URL       string
	Status    DropStatus
	MovedAt   time.Time
	CreatedAt time.Time
	UpdatedAt time.Time
}

type DropTag struct {
	ID        uuid.UUID
	DropID    uuid.UUID
	TagID     uuid.UUID
	CreatedAt time.Time
}

type SchemaMigration struct {
	ID    int32
	Slug  string
	RunAt time.Time
}

type Tag struct {
	ID        uuid.UUID
	UserID    uuid.UUID
	Name      string
	CreatedAt time.Time
	UpdatedAt time.Time
}

type User struct {
	ID           uuid.UUID
	EmailAddress string
	CreatedAt    time.Time
	UpdatedAt    time.Time
}
