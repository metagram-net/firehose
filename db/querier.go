// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"context"

	"github.com/gofrs/uuid"
)

type Querier interface {
	ApiKeyCreate(ctx context.Context, arg ApiKeyCreateParams) (ApiKey, error)
	ApiKeyFind(ctx context.Context, arg ApiKeyFindParams) (ApiKey, error)
	DropCreate(ctx context.Context, arg DropCreateParams) (Drop, error)
	DropDelete(ctx context.Context, arg DropDeleteParams) (Drop, error)
	DropFind(ctx context.Context, arg DropFindParams) (Drop, error)
	DropList(ctx context.Context, arg DropListParams) ([]Drop, error)
	DropMove(ctx context.Context, arg DropMoveParams) (Drop, error)
	DropNext(ctx context.Context, userID uuid.UUID) (Drop, error)
	DropTagApply(ctx context.Context, arg DropTagApplyParams) (DropTag, error)
	DropUpdate(ctx context.Context, arg DropUpdateParams) (Drop, error)
	TagCreate(ctx context.Context, arg TagCreateParams) (Tag, error)
	TagDelete(ctx context.Context, arg TagDeleteParams) (Tag, error)
	TagFind(ctx context.Context, arg TagFindParams) (Tag, error)
	TagFindAll(ctx context.Context, arg TagFindAllParams) ([]Tag, error)
	TagList(ctx context.Context, userID uuid.UUID) ([]Tag, error)
	TagMove(ctx context.Context, arg TagMoveParams) (Tag, error)
	TagsDrop(ctx context.Context, arg TagsDropParams) ([]Tag, error)
	TagsDrops(ctx context.Context, arg TagsDropsParams) ([]TagsDropsRow, error)
	UserCreate(ctx context.Context, emailAddress string) (User, error)
	UserFind(ctx context.Context, id uuid.UUID) (User, error)
}

var _ Querier = (*Queries)(nil)
