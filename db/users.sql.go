// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package db

import (
	"context"

	"github.com/gofrs/uuid"
)

const userCreate = `-- name: UserCreate :one
insert into users (email_address) values ($1) returning id, email_address, created_at, updated_at
`

func (q *Queries) UserCreate(ctx context.Context, emailAddress string) (User, error) {
	row := q.db.QueryRowContext(ctx, userCreate, emailAddress)
	var i User
	err := row.Scan(
		&i.ID,
		&i.EmailAddress,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const userFind = `-- name: UserFind :one
select id, email_address, created_at, updated_at from users where id = $1
`

func (q *Queries) UserFind(ctx context.Context, id uuid.UUID) (User, error) {
	row := q.db.QueryRowContext(ctx, userFind, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.EmailAddress,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
